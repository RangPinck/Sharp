всё делается через git bash (це консолька)

создать и привязать гит репозиторий к указанной папке
git init - создание локального репозитория
git status - показывает статус файлов для текущей ветки на данный момент
git add . -  добавляет все неотслеживамые файлы в индекс
git commit -m "название" - быстрое создание коммита, только с его названием
git log - история комиитов
git remote add origin https://github.com/RangPinck/CSharp_me_studing.git - добалвение пути к репозиторию на гит хабе
git remote -v -  показывает все пути к репоизториям которыми пользовались
git push origin master - загрузка изменений (пуш)  в репозиторий
git pull origin master - выгрузка изменений из репозитория (после изсправлений)
git reset HEAD - удалить отслеживаемые файлы из индекса (git reset --hard HEAD~1)
git clean -dxf - удаление последних изменений самих файлов 
git restore . - 

порядок полного отката:
1. git reset HEAD 
2. git restore .
3. git clean -dxf

ну  а теперь по порядку
    У меня недавно возникла проблема, когда у меня на 2х разных компах основная ветка  в git называется по разному, 
что создавало сначала большой дискомфорт при скачивании (pull) и обновлении файлов
если произошла такая ситуация, то:

Для скачивания файлов в нужную папку (где была создана связка с git) необходимо:

    1. привязать путь к репоизиторию
    пример коменды: git remote add [название пути (чаще всего называют origin)] [ссылка на репозиторий с гита]

    2. проверить созданный путь (а то мало ли)
    команда: git remote -v (там будет отображено два пути (тк путей может быть и больше, то их количество будет краитно 2)
    с одинаковой ссылкой и названием, но приписками "fetch" и "pull")

    3.скачать изменения
    команда: git pull [название созданного пути привязанного к папке] [название ветки с гитхаба(тк ветки разные из-за работы на разных компах)]

После этого всё что было в репозитории, будет скачено в папку, где объявлен git (ну увидите).

Но что же на счёт публикации изменений (git push)?
Сейчас всё объясню.
Чтобы создать публикацию, необходимо сначала отследить изменения в файлах.
В данном случае, файлы могут быть отслеживаемыми и неотслеживаемыми.
чтобы это проверить, надо использовать команду :  git status
Если файлы отмечены красным, то они не отслеживаются или были изменны.

В таком случае, чтобы их отследить, необходимо прописать команду "git add ."
И полсе проверки статуса этих файлов, они станут зелёными, что будет значить отслеживание их изменения.
(но если файл так и продолжается изменяться, те после добалвание в отслеживание вы его изменили 
не зафиксировав сами изменения (будет рассмотрено далее), то он так и останется красным, только с пометкой "modified" = "изменяется".
это вс решается так же с помощью команды "git add ."? но стоит помнить что его отслеживаемая версия всё ещё никуда не делась)







